name: Referee-system

services:
  app-backend:
    build: .
    image: ref-sys-image
    container_name: ref-sys-container
    command: /app/entrypoint.sh
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - "./backend:/app"
    depends_on:
      - postgres
      - redis
  
  app-frontend:
    build: .
    image: referee-frontend:V0.1-dev
    container_name: referee-frontend-container
    command: npm run dev
    ports:
      - "8080:8080"
    restart: unless-stopped
    volumes:
      - "./frontend:/app"
    depends_on:
      - app-backend
  
  postgres:
    image: postgres
    container_name: postgres-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  redis:
    image: "redis:alpine"
    container_name: redis-container
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    image: ref-sys-image
    container_name: celery-container
    command: uv run celery -A ref_sys worker -E -l info
    volumes:
      - "./backend:/app"
    depends_on:
      - app-backend
      - postgres
      - redis
  
  flower:
    image: ref-sys-image
    container_name: flower-container
    command: uv run celery -A ref_sys flower --basic_auth=admin:admin
    ports:
      - "5555:5555"
    depends_on:
      - redis
  
  beat:
    image: ref-sys-image
    container_name: beat-container
    command: uv run celery -A ref_sys beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - "./backend:/app"
    depends_on:
      - redis
      - app-backend

volumes:
  postgres_data:
  redis_data: